//
//  KnowledgeDetailView.m
//  study
//
//  Created by mijibao on 16/1/21.
//  Copyright © 2016年 mijibao. All rights reserved.
//

#import "KnowledgeDetailView.h"
#import "CommentTabelViewCell.h"
#import <Masonry.h>
#import "CommentModel.h"
#import "CommentHeaderView.h"
#import "LoginViewController.h"
#import "LectureNetCore.h"
#import "LectureDetailModel.h"
#import <UIImageView+AFNetworking.h>
#import "KnowledgeDetailViewController.h"

@interface KnowledgeDetailView()<UITableViewDelegate,UITableViewDataSource,UIAlertViewDelegate,LectureNetCoreDelegate>

@property (weak, nonatomic) IBOutlet UIImageView *teacherImageView; //老师头像
@property (weak, nonatomic) IBOutlet UILabel *teacherName;//老师名字
@property (weak, nonatomic) IBOutlet UILabel *releaseTime; //发布时间
@property (weak, nonatomic) IBOutlet UILabel *readCount;  //阅读数量
@property (weak, nonatomic) IBOutlet UIButton *attentionBtn; //关注
@property (weak, nonatomic) IBOutlet UIImageView *subjectTypeImageView; //科目类型
@property (weak, nonatomic) IBOutlet UILabel *subjectTitle;//科目标题
@property (weak, nonatomic) IBOutlet UIButton *subjectCollectBtn;//收藏
@property (weak, nonatomic) IBOutlet UIView *chatView;  //发送评论
@property (weak, nonatomic) IBOutlet UITableView *commentTableView; //视频和评论

@property (nonatomic, strong) CommentHeaderView *headerView;  //header
@property (nonatomic, strong) CommentModel *commentModel;  //cell数据
@property (nonatomic, strong) LectureNetCore *lectureNetCore; //网络请求
@property (nonatomic, strong) LectureDetailModel *detailModel;
@property (nonatomic, assign) CGFloat cellHeight;

@end

@implementation KnowledgeDetailView

- (id)initWithFrame:(CGRect)frame {
    self = [super initWithFrame:frame];
    if (self) {

        self = [[[NSBundle mainBundle] loadNibNamed:@"View" owner:self options:nil] objectAtIndex:1];
        frame.size.height -=64;
        self.frame = frame;
       [self refreshViewUI];
        [self requestData];//课程详情
    }
    return self;
}

- (void)refreshViewUI {

    _lectureNetCore = [[LectureNetCore alloc] init];
    _lectureNetCore.del = self;
    _headerView = [[CommentHeaderView alloc] initWithFrame:CGRectMake(0, 0, Main_Width-20, 370)];
    [self.commentTableView beginUpdates];
    [self.commentTableView setTableHeaderView:_headerView];
    [self.commentTableView endUpdates];

}

#pragma mark - 数据请求
-(void)requestData
{
    //异步请求数据
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        [_lectureNetCore requestFindBidLessonDetial:_lecrureid withUserId:[UserInfoList loginStatus]?@"":[UserInfoList loginUserId]];
    });
}

#pragma mark --- 功能按钮
- (IBAction)founctionBtnClick:(UIButton *)sender {
    if (![UserInfoList loginStatus]) {
        UIAlertView *waringView = [[UIAlertView alloc] initWithTitle:@"提示" message:@"亲,您还未登录。请登录后在操作" delegate:self cancelButtonTitle:@"登陆" otherButtonTitles:@"取消",nil];
        [waringView show];
    }
    if (sender.tag == 10) {  //关注
        //NSLog(@"收藏按钮点击~~");
        if (_lecrureid != nil) {
            
            if (sender.selected) {
                dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
                    [_lectureNetCore requestBiglessonWithDelCollect:_lecrureid];
                });
            }else{
                //异步请求数据
                dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
                    [_lectureNetCore requestBigLessonWithCollect:_lecrureid withUserId:[UserInfoList loginUserId]];
                });
            }
        }
    }else if (sender.tag == 11) {  //收藏
        
    }
}

#pragma -mark 界面赋值
- (void)setDetailModel:(LectureDetailModel *)detailModel {
    //老师名字
    if (![JZCommon isBlankString:detailModel.lecturer]) {
        _teacherName.text = detailModel.lecturer;
    }
    //发布时间
    if (![JZCommon isBlankString:detailModel.addtime]) {
        NSString *timeStr = detailModel.addtime;
        timeStr = [timeStr stringByReplacingOccurrencesOfString:@"." withString:@"-"];
       _releaseTime.text = timeStr;
    }
    //头像
//    if (![JZCommon isBlankString:detailModel.picurl]) {
//        [_teacherImageView setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"http://%@/studyManager%@",SERVER_ADDRESS,detailModel.picurl]] placeholderImage:[UIImage imageNamed:@"touxiang"]];
//    }
    //课程题目
    if (![JZCommon isBlankString:self.titleName]) {
        _headerView.titleName = self.titleName;
        self.subjectTitle.text = self.titleName;
    }
    //类型图标
    if (![JZCommon isBlankString:detailModel.subject]) {
        NSString *imageName = [NSString stringWithFormat:@"默认%@",detailModel.subject];
        _subjectTypeImageView.image = [UIImage imageNamed:imageName];
    }
}

#pragma -mark UIAlertViewDelegate
- (void)alertViewCancel:(UIAlertView *)alertView {
    LoginViewController *lVc = [[LoginViewController alloc] init];
    KnowledgeDetailViewController *kdVc = (KnowledgeDetailViewController *)self.superview.nextResponder;
    [kdVc.navigationController pushViewController:lVc animated:YES];
}


#pragma -mark UITableViewDelegate

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{

    return _cellHeight;
}

#pragma -mark UITableViewDataSource
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return 5;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *cell = @"CommentTabelViewCell";
    CommentTabelViewCell *commentCell = [tableView dequeueReusableCellWithIdentifier:cell];
    if (!commentCell) {
        commentCell = [[CommentTabelViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cell];
    }
    //设置数据
    _commentModel = [[CommentModel alloc] init];
    _commentModel.image = @"touxiang";
    _commentModel.name = @"宋老师";
    _commentModel.time = @"2016-01-25 12:00";
    _commentModel.content = @"近日，军部驻扎厦门的第31集团军在东南沿海进行了大规模实弹登陆演习。演习中，第31集团军出动了所属的远程火箭炮、自行榴弹炮部队、两栖战车部队和直升机机降部队。";
    commentCell.message = _commentModel;
    _cellHeight = commentCell.cellHeight;
    
    return commentCell;
}

#pragma -mark 网络请求返回数据
//返回课程详情数据
- (void)postBigLessonFindBigLessionDetail:(LectureDetailModel *)model isSuccess:(BOOL)isSuccess
{
    dispatch_async(dispatch_get_main_queue(), ^{
        if (!isSuccess) {
            NSLog(@"获取详情失败");
            return;
        }
        
        if (model == nil) {
            NSLog(@"暂无数据");
        }else{
            self.detailModel = model;
            _headerView.detailModel = model;
            [self.commentTableView beginUpdates];
            [self.commentTableView setTableHeaderView:_headerView];
            [self.commentTableView endUpdates];
        }
    });
}
////返回收藏
- (void)postBigLessonCollectWithString:(NSString *)string isSuccess:(BOOL)isSuccess {
    
    if ([string isEqualToString:@"0"]) {
        NSLog(@"收藏失败");
    }else if ([string isEqualToString:@"2"]){
        NSLog(@"该课程已收藏");
    }else{
        NSLog(@"收藏成功");
        _subjectCollectBtn.selected = YES;
    }
}
//删除收藏返回
- (void)actionBigLessonDelCollect:(BOOL)isSuccess
{
    if (isSuccess) {
        NSLog(@"删除收藏成功");
        _subjectCollectBtn.selected = NO;
    }else{
        NSLog(@"删除收藏失败");

    }
}



@end
