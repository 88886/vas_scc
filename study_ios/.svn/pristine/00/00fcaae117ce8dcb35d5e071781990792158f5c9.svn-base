//
//  ProblemDetailViewController.m
//  study
//
//  Created by jzkj on 16/1/19.
//  Copyright © 2016年 mijibao. All rights reserved.
//

#import "ProblemDetailViewController.h"
#import <Masonry/Masonry.h>
#import "MyCustomView.h"
#import "CInputView.h"
#import "ChatMsgDTO.h"
#import "JHFacePlist.h"
#import "ChatMsgListManage.h"
#import "MsgSummaryManage.h"
#import "MsgListTableViewCell.h"
#import "UploadFileCore.h"
#define maxChatWidth 200
#define maximgWidth 113
#define maximgHeight 120
#define vedioimgWidth 110
#define vedioimgHeight 120
@interface ProblemDetailViewController ()<UITableViewDataSource,UITableViewDelegate,InputViewDelegate,MsgListTableViewCellDelegate>{
    UILabel *submitLab;//提交问题
    UIView *backview;//遮挡视图
    BOOL backisShow;//遮挡视图隐藏
    UploadFileCore *uploadData;//上传消息附件
}
@property (nonatomic, strong) UITableView *chatTableView;
@property (nonatomic, strong) CInputView *inputView;  //键盘
@property (nonatomic, strong) NSMutableArray *dataArray;//聊天数据
//消息重复
@property(nonatomic,strong)UIActivityIndicatorView *sendMsgAgain;

@end

@implementation ProblemDetailViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.userId = [UserInfoList loginUserPhone];
    self.chatId = self.userId;
    //消息上传
    uploadData = [[UploadFileCore alloc] init];
    uploadData.delegate = self;
    //消息列表
    self.dataArray = [[ChatMsgListManage shareInstance]readChatMsgList:self.chatId :self.userId :0 :0];
    [self layoutNavigation];
    [self layoutTableView];
    // Do any additional setup after loading the view.
    //新消息通知
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(newMessageReload:) name:kNewMessageNotification object:nil];
}
- (void)layoutNavigation{
    self.navigationController.navigationBar.barTintColor = [UIColor blackColor];
    self.navigationController.navigationBar.tintColor = [UIColor whiteColor];
    [self.navigationController.navigationBar setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:[UIColor whiteColor],NSForegroundColorAttributeName, nil]];
    UIBarButtonItem *leftBarButton = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"partner_allback"] style:UIBarButtonItemStylePlain target:self action:@selector(backTolistView)];
    self.navigationItem.leftBarButtonItem = leftBarButton;
    UIBarButtonItem *rightBarButton = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"publemRightBar"] style:UIBarButtonItemStylePlain target:self action:@selector(showBarMenu)];
    self.navigationItem.rightBarButtonItem = rightBarButton;
    self.navigationItem.title = @"问题详情";
}
- (void)layoutTableView{
    __weak __typeof(self) weakSelf = self;
    self.chatTableView = [[UITableView alloc] init];
    self.chatTableView.delegate = self;
    self.chatTableView.dataSource = self;
    self.chatTableView.backgroundColor = RGBCOLOR(226, 226, 226);
    self.chatTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    self.chatTableView.contentInset = UIEdgeInsetsMake(40, 0, 0, 0);
    [self.view addSubview:self.chatTableView];
    [self.chatTableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.top.offset(0);
        make.width.equalTo(weakSelf.view);
        make.bottom.equalTo(weakSelf.view).with.offset(-44);
        
    }];
    self.inputView = [[CInputView alloc] init];
    [self.view addSubview:_inputView];
    [self.inputView layoutViews];
    _inputView.delegate = self;
    [self.inputView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(weakSelf.chatTableView.mas_bottom);
        make.width.equalTo(weakSelf.view);
        make.height.equalTo(@194);
        make.left.equalTo(weakSelf.view);
    }];
    UIButton *submitBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    submitBtn.backgroundColor = [UIColor whiteColor];
    submitBtn.layer.cornerRadius = 5;
    [self.view addSubview:submitBtn];
    [submitBtn mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.equalTo(self.view);
        make.top.equalTo(@-5);
        make.height.equalTo(@45);
        make.width.equalTo(@136);
    }];
    NSMutableAttributedString *attributestr = [[NSMutableAttributedString alloc] initWithString:@"提交问题\n(限时免费)"];
    [attributestr setAttributes:@{NSForegroundColorAttributeName:UIColorFromRGB(0xff7949), NSFontAttributeName:[UIFont systemFontOfSize:15]} range:NSMakeRange(0, 4)];
    [attributestr addAttributes:@{NSForegroundColorAttributeName:UIColorFromRGB(0xbcbcbc), NSFontAttributeName:[UIFont systemFontOfSize:10]} range:NSMakeRange(5, 6)];
    submitLab = [[UILabel alloc] initWithFrame:CGRectMake(0, 5, 136, 40)];
    submitLab.textAlignment = NSTextAlignmentCenter;
    submitLab.attributedText = attributestr;
    submitLab.numberOfLines = 2;
    [submitBtn addSubview:submitLab];
}
//右上角菜单
- (void)showBarMenu{
    if (!backview) {
        backisShow = YES;
        backview = [UIView new];
        UITapGestureRecognizer *backtapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(backTapHiddeView)];
        [backview addGestureRecognizer:backtapGesture];
        [self.view addSubview:backview];
        [backview mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.left.right.bottom.equalTo(self.view);
        }];
        backview.backgroundColor = [UIColor clearColor];
        UIImageView *backImage = [UIImageView new];
        backImage.image = [UIImage imageNamed:@"imBarstuimg"];
        [backview addSubview:backImage];
        [backImage mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(backview).offset(7);
            make.right.equalTo(backview).offset(-10);
            make.width.equalTo(@90);
            make.height.equalTo(@85);
        }];
        UIButton *changeTea = [self creatImageBtnWithTitlt:@"更换老师" titCloro:[UIColor whiteColor] leftImage:@"imChangeTea"];
        changeTea.tag = 1801;
        [backview addSubview:changeTea];
        [changeTea mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(@12);
            make.right.equalTo(backImage);
            make.width.equalTo(@90);
            make.height.equalTo(@40);
        }];
        UIButton *showTeacher = [self creatImageBtnWithTitlt:@"老师详情" titCloro:[UIColor whiteColor] leftImage:@"imShowTeaDea"];
        [backview addSubview:showTeacher];
        changeTea.tag = 1802;
        [showTeacher mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(@52);
            make.right.equalTo(backImage);
            make.width.equalTo(@90);
            make.height.equalTo(@40);
        }];
        [changeTea addTarget:self action:@selector(naviBarBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        [showTeacher addTarget:self action:@selector(naviBarBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        UIView *lineview = [[UIView alloc] initWithFrame:CGRectMake(2, 45, 86, 1)];
        lineview.backgroundColor = RGBCOLOR(64, 64, 64);
        [backImage addSubview:lineview];
    }
    [self hiddenBackView];
}
- (void)backTapHiddeView{
    backview.hidden = YES;
    backisShow = YES;
}
- (void)naviBarBtnClick:(UIButton *)btn{
    backview.hidden = YES;
    backisShow = YES;
}
//隐藏back视图
- (void)hiddenBackView{
    if (backisShow) {
        backview.hidden = NO;
        backisShow = NO;
    }else{
        backview.hidden = YES;
        backisShow = YES;
    }
}
#pragma mark - 新消息处理
// 接收到新消息通知
- (void)newMessageReload:(NSNotification *)notification
{
    
    dispatch_queue_t queue=dispatch_get_main_queue();
    dispatch_async(queue, ^{
        ChatMsgDTO *model = [[notification userInfo] objectForKey:@"newMessage"];
        if (![model.fromuid isEqualToString:self.chatId]) {
            return;
        }
        [self.dataArray addObject:model];
        NSIndexPath * path = [NSIndexPath indexPathForRow:self.dataArray.count-1 inSection:0];
        NSMutableArray * array1 = [[NSMutableArray alloc] init];
        [array1 addObject:path];
        [self.chatTableView insertRowsAtIndexPaths:array1 withRowAnimation:UITableViewRowAnimationBottom];
        [self.chatTableView scrollToRowAtIndexPath:path atScrollPosition:UITableViewScrollPositionBottom animated:NO];
    });
    
    
}
#pragma mark - tabel代理
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.dataArray.count ;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    //查询消息发送状态
    ChatMsgDTO *msgDto = (ChatMsgDTO *)[self.dataArray objectAtIndex:indexPath.row];
    
    //3分钟内不显示时间
    BOOL isShowTime = YES;
    if(indexPath.row > 0){
        NSDate *nowMsgDate = [JZCommon stringToDate:msgDto.sendtime format:@"yyyy-MM-dd HH:mm:ss.SSS"];
        //获取上一条消息的时间
        NSDate *cellLastTime = [JZCommon stringToDate:((ChatMsgDTO *)[self.dataArray objectAtIndex:indexPath.row-1]).sendtime format:@"yyyy-MM-dd HH:mm:ss.SSS"];
        NSTimeInterval cha= [ JZCommon timeDifference:cellLastTime :nowMsgDate];
        if(cha / 60 <= 3){
            isShowTime = NO;
        }
    }
    
    BOOL isShowName = NO;
    static NSString *cllID = @"chatCllID";
    MsgListTableViewCell *cell = (MsgListTableViewCell *)[tableView dequeueReusableCellWithIdentifier:cllID];
    if (cell) {
        cell.timeLable.text = nil;
        [cell.contentView.subviews makeObjectsPerformSelector:@selector(removeFromSuperview)];
    }
    if (!cell){
        cell = [[MsgListTableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cllID];
    }
    cell.isShowTime = isShowTime;
    //    cell.emojiDic=emojiDic;
    cell.msgDto = msgDto;
    cell.isShowName = isShowName;
    //cell布局并赋值
    [cell initcellView];
    
    //设置长按事件
    UILongPressGestureRecognizer *longPress =
    [[UILongPressGestureRecognizer alloc] initWithTarget:self
                                                  action:@selector(handleTableviewCellLongPressed:)];
    //longPress.delegate = self;
    longPress.minimumPressDuration = 1.0;
    cell.chatMsgBg.tag = indexPath.row;
    //将长按手势添加到需要实现长按操作的视图里
    [cell.chatMsgBg addGestureRecognizer:longPress];
    
    cell.delegate = self;
    cell.tag = 40000 + indexPath.row;
    //为发送失败按钮增加重新发送事件
    if(0 == msgDto.success){
        self.sendMsgAgain = [[UIActivityIndicatorView alloc]initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhite];
        self.sendMsgAgain.frame = CGRectMake(cell.successViewButton.frame.origin.x, cell.successViewButton.frame.origin.y, cell.successViewButton.frame.size.width, cell.successViewButton.frame.size.height);
        [cell addSubview:self.sendMsgAgain];
        [cell.successViewButton addTarget:self action:@selector(clickSuccessViewButton:) forControlEvents:UIControlEventTouchUpInside];
        cell.successViewButton.tag = indexPath.row;
    }
    //视频发送 转发消息视频不用上传了
    //    if(msgDto.filetype==3&&msgDto.sendtype==0&&istransType==0&&msgDto.success==3){
    //        if([CommonCore isBlankString:cell.msgDto.progress]){
    //            //发送
    //            CGRect frame=cell.chatMsgBg.frame;
    //            frame.size.height+=25;
    //            [cell.chatMsgBg setFrame:frame];
    //            cell.tag=40000+indexPath.row;
    //            [self changeHeightWithCell:cell row:indexPath.row];
    //
    //        }
    //    }
    else if(msgDto.success == 3)
    {
        //断网显示红点
        Reachability *r = [Reachability reachabilityWithHostname:@"www.baidu.com"];
        if ([r currentReachabilityStatus] == NotReachable) {
            msgDto.success = 0;
        }
        //有网判断时间超过3分钟判定为失败
        else
        {
            NSDate *date=[JZCommon stringToDate:msgDto.sendtime format:@"yyyy-MM-dd HH:mm:ss.SSS"];
            NSString * mm = [JZCommon dateToString:date format:@"mm"];
            NSString * HH = [JZCommon dateToString:date format:@"HH"];
            NSString * mm1 = [JZCommon dateToString:[NSDate date] format:@"mm"];
            NSString * HH1 = [JZCommon dateToString:[NSDate date] format:@"HH"];
            if (![HH1 isEqualToString:HH]) {
                msgDto.success = 0;
            }
            else if(([mm1 intValue]-[mm intValue])>3)
            {
                msgDto.success = 0;
            }
        }
    }
    
    if(msgDto.filetype==3){
        //        //视频 初始化上传
        //        if (!cell.uploadFile) {
        //            cell.uploadFile = [[JZUploadFile alloc] initHost:[OperatePlist HTTPServerAddress] port:10000];
        //            cell.uploadFile.delegate = self;
        //        }
        
        CGFloat width=cell.videoImageView.frame.size.width;
        CGFloat height=cell.videoImageView.frame.size.height;
        
        UILabel *bottomLabel=[MyCustomView creatLabelWithFrame:CGRectMake(0, height-20, width, 20) text:nil alignment:NSTextAlignmentRight];
        bottomLabel.backgroundColor=[UIColor lightGrayColor];
        bottomLabel.alpha=0.8;
        UILabel *sizeLabel=[MyCustomView creatLabelWithFrame:CGRectMake(0, height-20, width, 20) text:nil alignment:NSTextAlignmentLeft];
        UILabel *longLabel=[MyCustomView creatLabelWithFrame:CGRectMake(0, height-20, width, 20) text:nil alignment:NSTextAlignmentRight];
        sizeLabel.font=[UIFont systemFontOfSize:11];
        longLabel.font=[UIFont systemFontOfSize:11];
        if(msgDto.duration!=nil){
            longLabel.text=[NSString stringWithFormat:@"%02d:%02d",[msgDto.duration intValue]/60,[msgDto.duration intValue]%60];
            longLabel.textColor=[UIColor whiteColor];
        }
        if(msgDto.duration!=nil){
            sizeLabel.text = msgDto.totalsize;
            sizeLabel.textColor=[UIColor whiteColor];
        }
        
        [cell.videoImageView addSubview:bottomLabel];
        [cell.videoImageView addSubview:sizeLabel];
        [cell.videoImageView addSubview:longLabel];
    }
    
    
    cell.selectionStyle=UITableViewCellSelectionStyleNone;
    cell.userInteractionEnabled=YES;
    cell.contentView.backgroundColor = RGBCOLOR(226, 226, 226);
    
    return cell;
    
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    //查询消息发送状态
    ChatMsgDTO *msgDto=(ChatMsgDTO *)[self.dataArray objectAtIndex:indexPath.row];
    
    //3分钟内不显示时间
    BOOL isShowTime=YES;
    if(indexPath.row>0){
        NSDate *nowMsgDate=[JZCommon stringToDate:msgDto.sendtime format:@"yyyy-MM-dd HH:mm:ss.SSS"];
        //获取上一条消息的时间
        NSDate *cellLastTime=[JZCommon stringToDate:((ChatMsgDTO *)[self.dataArray objectAtIndex:indexPath.row-1]).sendtime format:@"yyyy-MM-dd HH:mm:ss.SSS"];
        NSTimeInterval cha=[JZCommon timeDifference:cellLastTime :nowMsgDate];
        if(cha/60<=3){
            isShowTime=NO;
        }
    }
    BOOL isShowName=NO;
    
    CGFloat height=0;
    
    switch (msgDto.filetype) {
            //通知
        case 99:{
            CGSize msgSize = [JZCommon getTextSize:msgDto.content textFont:14 textMaxWidth:300];
            height= msgSize.height-20;
            break;
        }
            //文本
        case 0:{
            height = [[MsgListTableViewCell new] heightForMessageContent:msgDto.content].height;
            break;
        }
            //语音
        case 1:
            height=20;
            break;
            //图片
        case 2:{
            CGSize maxSize = {maximgWidth,maximgHeight};
            UIImage * cacheImg;
            if ([JZCommon isBlankString:msgDto.content] || ![JZCommon isExistFile:msgDto.content]) {
                cacheImg = [[SDImageCache sharedImageCache] imageFromDiskCacheForKey:msgDto.thumbnail];
            }
            else{
                cacheImg = [UIImage imageWithContentsOfFile:msgDto.content];
            }
            CGSize imageSize=cacheImg.size;
            CGSize imgSize = [JZCommon imgScaleSize:imageSize :maxSize];
            height = imgSize.height-15;
            break;
        }
            //视频
        case 3:
            height = vedioimgHeight+15;
            break;
        default:
            height = 20;
            break;
            
    }
    if(isShowTime){
        height=height+65;
    }else{
        height=height+40;
    }
    if (isShowName) {
        height=height+20;
    }
    return height;
    
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
}

#pragma mark - CInputView delegate

- (void)inputViewHeightChanged:(CGFloat)height duration:(CGFloat)duration
{
    // 告诉self.view约束需要更新
    [self.view setNeedsUpdateConstraints];
    [self.chatTableView mas_updateConstraints:^(MASConstraintMaker *make) {
        make.bottom.equalTo(self.view).with.offset(-44 - height);
    }];
    [UIView animateWithDuration:duration animations:^{
        [self.view layoutIfNeeded];
    }];
}

//  录音动画
- (void)showRecordAnimation{
    
}
- (void)stopRecordAnimation{
    
}
#pragma mark - 录音完成
- (void)postSoundWithUrlString:(NSString *)localpath andRecordTime:(NSString *)duration withRecordData:(NSData *)recData{
    ChatMsgDTO *msg = [[ChatMsgDTO alloc] init];
    msg.filetype = 1;
    msg.localpath=localpath;
    msg.fromuid=self.userId;
//    msg.sendName = sendname;
//    msg.receiverName = chatname;
    msg.touid=self.chatId;
    msg.sendtime=[JZCommon dateToString:[NSDate date] format:@"yyyy-MM-dd HH:mm:ss.SSS"];
    msg.sendtype=0;
    msg.msgid=[JZCommon GUID];
    msg.duration = duration;
    msg.success =3;
    //保存本地数据
    [self savechatMsg:msg];
    //上传至文件服务器
    [uploadData uplaodChatMessage:msg];
}

//  更多代理
- (void)moveViewActionWithType:(MoreViewActionType)type{
    
}

#pragma mark - 发送文字消息及消息上传
- (void)sendMessageToChat:(NSString *)text {
    
    NSString *content = [[JHFacePlist sharedInstance]formatMsgText:text];
    ChatMsgDTO *msg = [[ChatMsgDTO alloc]init];
    msg.content = content;
    msg.filetype = 0;
    msg.url = nil;
    msg.fromuid = self.userId;
    msg.touid = self.chatId;
    msg.sendtype = 0;
    msg.sendtime = [JZCommon dateToString:[NSDate date] format:@"yyyy-MM-dd HH:mm:ss.SSS"];
    msg.msgid = [JZCommon GUID];
    msg.localpath = nil;
    msg.chatType = 0;
    msg.success = 1;
    //本地保存
    [self savechatMsg:msg];
    //发送文本消息
    [self sendContent:msg];
    
}
#pragma mark---公共方法 保存数据 上传文件代理

//保存消息
- (void)savechatMsg:(ChatMsgDTO *)msg {
    //聊天记录进入后,按正常的聊天
    //    self.searchType=0;
    dispatch_queue_t queue=dispatch_get_main_queue();
    dispatch_async(queue, ^{
        [self.dataArray addObject:msg];
        
        NSIndexPath * path = [NSIndexPath indexPathForRow:self.dataArray.count-1 inSection:0];
        NSMutableArray * array1 = [[NSMutableArray alloc] init];
        [array1 addObject:path];
        [self.chatTableView insertRowsAtIndexPaths:array1 withRowAnimation:UITableViewRowAnimationBottom];
        [self.chatTableView scrollToRowAtIndexPath:path atScrollPosition:UITableViewScrollPositionBottom animated:NO];
        //        if (msg.filetype==3 && _transfmitType != 2 &&_transfmitType !=1) {
        //            [[self appDelegate].videoUploadArray addObject:(MsgListTableViewCell*)[self.tView cellForRowAtIndexPath:path]];
        //            //上传至文件服务器
        //            for (int i=0; i<[self appDelegate].videoUploadArray.count; i++) {
        //                MsgListTableViewCell * cellPauce=(MsgListTableViewCell *)[[self appDelegate].videoUploadArray objectAtIndex:i];
        //                if ([msg.msgid isEqualToString:cellPauce.msgDto.msgid]) {
        //                    [cellPauce.uploadFile uploadFilePath:msg.content fileName:msg.msgid];
        //                    [cellPauce.uploadFile startUpload];
        //                }
        //            }
        //            [self performSelector:@selector(changeTviewContent) withObject:nil afterDelay:0.5];
        //        }
    });
    
    //子线程保存数据
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        //保存消息表
        [[ChatMsgListManage shareInstance]saveChatMsg:msg];
        //保存消息汇总信息
        [[MsgSummaryManage shareInstance] dealMsgSummary:msg :self.chatId];
        
    });
    
    //设置为有新消息
    //    [self appDelegate].isHaveNewMsg=YES;
    
}

#pragma mark - 发送消息

//发送消息内容   判断有没网
- (void)sendContent:(ChatMsgDTO *)msg {
    Reachability *r = [Reachability reachabilityWithHostname:@"www.baidu.com"];
    if ([r currentReachabilityStatus] == NotReachable){
        //更新消息发送状态
        msg.success=0;
//        [self reloadCell:msg.msgid];
        //子线程保存数据
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
            [[ChatMsgListManage shareInstance] saveSendMsgSuccess:msg];
        });
        
        //提示用户
//        [self performSelectorOnMainThread:@selector(showMessage:) withObject:NSLocalizedStringFromTable(@"Network unavailable", [OperatePlist readConfigLanguage], nil) waitUntilDone:NO];
    }
    else{
        //子线程保存数据
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
            [[XMPPManager sharedManager] sendMessage:msg];
        });
        
    }
}


#pragma mark -跳转操作
- (void)backTolistView{
    [self.navigationController popViewControllerAnimated:YES];
}
#pragma mark - 创建button方法
- (UIButton *)creatImageBtnWithTitlt:(NSString *)title titCloro:(UIColor *)color leftImage:(NSString *)imagename{
    UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
    btn.titleLabel.font = [UIFont systemFontOfSize:15];
    [btn setTitle:title forState:UIControlStateNormal];
    [btn setTitleColor:color forState:UIControlStateNormal];
    [btn setImage:[UIImage imageNamed:imagename] forState:UIControlStateNormal];
    [btn setImageEdgeInsets:UIEdgeInsetsMake(10, 5, 10, 70)];
    return btn;
    
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
 #pragma mark - Navigation
 
 // In a storyboard-based application, you will often want to do a little preparation before navigation
 - (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
 // Get the new view controller using [segue destinationViewController].
 // Pass the selected object to the new view controller.
 }
 */

@end
